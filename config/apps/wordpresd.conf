#!/bin/bash
# WordPress with MariaDB One-Click Deployment for Podman Pilot

APP_LANG_KEY="LANG_APPS_WORDPRESS_NAME"
WP_IMAGE="docker.io/library/wordpress:latest"
DB_IMAGE="docker.io/library/mariadb:latest"

deploy_app() {
    local app_display_name
    app_display_name=$(get_string "$APP_LANG_KEY")

    dialog --infobox "$(get_string "LANG_APPS_CONFIGURING" "$app_display_name")" 4 60
    sleep 1

    local pod_name wp_port db_root_password db_user db_password db_name wp_vol db_vol
    pod_name=$(get_input "LANG_APPS_WORDPRESS_DB_POD_NAME" "wordpress-pod")
    if [ -z "$pod_name" ]; then display_error "LANG_REQUIRED_FIELD"; return 1; fi

    wp_port=$(get_input "LANG_APPS_WORDPRESS_WP_PORT_PROMPT" "8000")
    if [ -z "$wp_port" ]; then display_error "LANG_REQUIRED_FIELD"; return 1; fi
    
    db_root_password=$(get_input "LANG_APPS_WORDPRESS_DB_ROOT_PASS_PROMPT" "")
    if [ -z "$db_root_password" ]; then display_error "LANG_REQUIRED_FIELD"; return 1; fi
    
    db_name=$(get_input "LANG_APPS_WORDPRESS_DB_NAME_PROMPT" "wordpress_db")
    if [ -z "$db_name" ]; then display_error "LANG_REQUIRED_FIELD"; return 1; fi
    
    db_user=$(get_input "LANG_APPS_WORDPRESS_DB_USER_PROMPT" "wp_user")
    if [ -z "$db_user" ]; then display_error "LANG_REQUIRED_FIELD"; return 1; fi
    
    db_password=$(get_input "LANG_APPS_WORDPRESS_DB_PASS_PROMPT" "")
    if [ -z "$db_password" ]; then display_error "LANG_REQUIRED_FIELD"; return 1; fi

    wp_vol=$(get_input "LANG_APPS_WORDPRESS_WP_VOL_PROMPT" "./wordpress_html")
    [[ "$wp_vol" != /* ]] && wp_vol="$PWD/$wp_vol"
    ensure_directory_exists "$wp_vol" "LANG_APPS_WORDPRESS_WP_VOL_PROMPT" || return 1
    
    db_vol=$(get_input "LANG_APPS_WORDPRESS_DB_VOL_PROMPT" "./mariadb_data")
    [[ "$db_vol" != /* ]] && db_vol="$PWD/$db_vol"
    ensure_directory_exists "$db_vol" "LANG_APPS_WORDPRESS_DB_VOL_PROMPT" || return 1

    local db_container_name="mariadb-$pod_name"
    local wp_container_name="wordpress-$pod_name"

    # Create Pod
    dialog --infobox "$(get_string "LANG_PODS_CREATING" "$pod_name")" 4 50
    if ! podman pod create --name "$pod_name" -p "${wp_port}:80"; then
        display_error "LANG_PODS_CREATE_FAILED" "$pod_name"
        return 1
    fi
    display_message "LANG_SUCCESS" "LANG_PODS_CREATED_SUCCESS" "$pod_name"

    # Deploy MariaDB
    dialog --infobox "$(get_string "LANG_APPS_WORDPRESS_DEPLOYING_DB")" 4 50
    if podman run -d \
        --pod "$pod_name" \
        --name "$db_container_name" \
        -e MYSQL_ROOT_PASSWORD="$db_root_password" \
        -e MYSQL_DATABASE="$db_name" \
        -e MYSQL_USER="$db_user" \
        -e MYSQL_PASSWORD="$db_password" \
        -v "${db_vol}:/var/lib/mysql:Z" \
        "$DB_IMAGE"; then
        display_message "$(get_string "LANG_SUCCESS")" "$(get_string "LANG_APPS_DEPLOY_SUCCESS" "MariaDB")"
    else
        display_error "$(get_string "LANG_APPS_DEPLOY_FAILED" "MariaDB")"
        podman pod rm -f "$pod_name" # Cleanup pod
        return 1
    fi

    # Wait a bit for DB to initialize
    display_message "$(get_string "LANG_INFO")" "Waiting for MariaDB to initialize (15 seconds)..."
    sleep 15

    # Deploy WordPress
    dialog --infobox "$(get_string "LANG_APPS_WORDPRESS_DEPLOYING_WP")" 4 50
    if podman run -d \
        --pod "$pod_name" \
        --name "$wp_container_name" \
        -e WORDPRESS_DB_HOST="127.0.0.1:3306" \
        -e WORDPRESS_DB_USER="$db_user" \
        -e WORDPRESS_DB_PASSWORD="$db_password" \
        -e WORDPRESS_DB_NAME="$db_name" \
        -v "${wp_vol}:/var/www/html:Z" \
        "$WP_IMAGE"; then
        display_message "$(get_string "LANG_SUCCESS")" "$(get_string "LANG_APPS_DEPLOY_SUCCESS" "WordPress")"
        display_message "$(get_string "LANG_INFO")" "$(get_string "LANG_APPS_WORDPRESS_ACCESS_INFO" "$wp_port" "$db_root_password")"
    else
        display_error "$(get_string "LANG_APPS_DEPLOY_FAILED" "WordPress")"
        # Optionally try to clean up the DB container and pod if WP fails
        # podman rm -f "$db_container_name"
        # podman pod rm -f "$pod_name"
        return 1
    fi
}
